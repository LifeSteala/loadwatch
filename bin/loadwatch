#!/bin/bash
#/ Usage: loadwatch [options]
#/
#/
#/
#/ OPTIONS:
#/   -h           Show this message
#/   -v           Run in verbose mode.

usage() {
  grep '^#/' <"$0" | cut -c 4-
}

# Defaults
STARTING_THRESHOLD=20.00
CURRENT_THRESHOLD=$STARTING_THRESHOLD
MAX_RUNS=12
RUNS=0
SLEEP_TIME=30
DAEMON=0

while getopts "hvt:m:s:d" OPTION; do
  case $OPTION in
    h)
      usage
      exit
      ;;
    d)
      DAEMON=1
      ;;
    t)
      STARTING_THRESHOLD=$OPTARG
      CURRENT_THRESHOLD=$STARTING_THRESHOLD
      ;;
    m)
      MAX_RUNS=$OPTARG
      ;;
    s)
      SLEEP_TIME=$OPTARG
      ;;
    v)
      set -x
      ;;
    ?)
      usage
      exit
      ;;
  esac
done

CMDOUT_LOG="load.cmd.log"
STDOUT_LOG="load.std.log"
ERROR_LOG="load.err.log"
COMMAND="ps aux --sort=-pcpu"

# re-exec in the background when running as a daemon
if [ $DAEMON -eq 1 ]; then
  exec $0 $@ 1>> $STDOUT_LOG 2>> $ERROR_LOG &
  exit
fi

echo "[`date \"+%Y/%b/%d %H:%M:%S\"`] starting up..."

current_load() {
  read LOAD1 LOAD5 LOAD15 PROCS PROCID < /proc/loadavg
  echo $LOAD1
}

load_exceeds_current_threshold() {
  current_load=$1
  [ ${current_load/./} -gt ${CURRENT_THRESHOLD/./} ]
}


while true; do
  load=$(current_load)

  if load_exceeds_current_threshold $load; then
    TIMESTAMP=`date "+%Y/%b/%d %H:%M:%S"`
    echo "[$TIMESTAMP] load avg increased from $CURRENT_THRESHOLD to $load"
    echo -e "\n\n[$TIMESTAMP] Active Process Dump at $load ==========================================" >> $CMDOUT_LOG
    $COMMAND >> $CMDOUT_LOG
    CURRENT_THRESHOLD=$load
  fi

  # Reset CURRENT_THRESHOLD to STARTING_THRESHOLD after running MAX_RUNS times
  let RUNS+=1
  if [ $RUNS -gt $MAX_RUNS ]; then
    RUNS=1
    CURRENT_THRESHOLD=$STARTING_THRESHOLD
  fi

  sleep $SLEEP_TIME
done
